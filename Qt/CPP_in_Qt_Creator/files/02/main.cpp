// подключим заголовочный файл ввода-вывода, для отображения информации
#include <cstdio>

// подключим заголовочный файл string, контейнерный тип, обеспечивающий работу
// со строками
#include <string>

// std - означает стандартную библиотеку с++ и данная директива позволяет не
// указывать префикс std:: перед каждой функцией этой библиотеки
using namespace std;

int main() {
  // объявление строки (создается пустая строка) равносильно записи string
  // str1="";
  string str1;

  // инициализация значением
  string str2 = "hello world!";

  // присвоение значения
  str1 = str2;

  // объединение строк
  string str3 = str1 + " " + str2;

  // очистка строки
  str3.clear();

  // проверка на пустую строку
  if (str3.empty()) {
    // строка пуста!
  };

  // поиск подстроки в строке, тип size_t числовой тип данных, в переменной
  // будет сохранена позиция
  //  первого вхождения с начала строки (метод rfind аналогичен, но ищет с конца
  //  строки)

  str3 = "world";
  size_t found = str1.find(str3);

  // проверка на ненайденное вхождение
  if (found == string::npos) {
    // подстрока в данной строке не найдена!
  };

  // в данном примере, found станет равна 6
  // копирование части подстроки, где 0 начальная позиция копирования, found -
  // количество символов для
  // копирования, таким образом, str2 примет значение "hello"

  str2 = str1.substr(0, found);

  // удаление части строки, здесь первый аргумент — это начальная позиция, с
  // которой удаляются символы (str2.length() это длина строки =6 отнимаем один
  // и начнем с последнего символа), а второй аргумент количество символов для
  // удаления

  str2.erase(str2.length() - 1, 1);
  // осуществим вывод посимвольно, продемонстрировав полученную строку и заодно
  // поэлементный доступ

  for (int i = 0, total = str2.length(); i < total; ++i) {
    printf("%c\n", str2.at(i));
  };

  // в результате будет выведено слово hello по букве с новой строки
  // также, для доступа к элементам по индексу, можно использовать оператор [],
  // например str2[1] = буква h
  return 0;
};
